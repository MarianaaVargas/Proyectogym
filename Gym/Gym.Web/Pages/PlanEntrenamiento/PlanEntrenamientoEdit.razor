@page "/planentrenamiento/edit/{Id:int}"
@inject NavigationManager navigationManager
@inject IRepository repository
@inject SweetAlertService swal

<h3>Editar PlanEntrenamiento</h3>

@if (planEntrenamiento is null)
{
    <p>Cargando...</p>
}
else
{
    <PlanEntrenamientoForm @ref="planentrenamientoForm" planEntrenamiento="planEntrenamiento" OnValidSubmit="Edit" ReturnAction="Return" />
    <Pagination CurrentPage="currentPage"
                TotalPages="totalPages"
                SelectedPage="SelectedPage" />
}

@code {
    private PlanEntrenamiento? planEntrenamiento;
    private PlanEntrenamientoForm? planentrenamientoForm;
    private int currentPage = 1;
    private int totalPages;
    [Parameter]
    public int Id { get; set; }

    protected override async Task OnInitializedAsync()
    {
        var responseHTTP = await repository.Get<PlanEntrenamiento>($"api/planentrenamiento/{Id}");

        if (responseHTTP.Error)
        {
            if (responseHTTP.HttpResponseMessage.StatusCode == System.Net.HttpStatusCode.NotFound)
            {
                navigationManager.NavigateTo("plaentrenamiento");
            }
            else
            {
                var messageError = await responseHTTP.GetErrorMessage();
                await swal.FireAsync("Error", messageError, SweetAlertIcon.Error);
            }
        }
        else
        {
            planEntrenamiento = responseHTTP.Response;
        }
    }
    private async Task SelectedPage(int page)
    {
        currentPage = page;
        await LoadAsync(page);
    }
    private async Task LoadAsync(int page = 1)
    {

        var responseHTTP = await repository.Get<PlanEntrenamiento>($"api/palnentrenamiento/{Id}");
        planEntrenamiento = responseHTTP.Response;



    }


    private async Task Edit()
    {
        var responseHTTP = await repository.Put("api/plaentrenamiento", planEntrenamiento);

        if (responseHTTP.Error)
        {
            var mensajeError = await responseHTTP.GetErrorMessage();
            await swal.FireAsync("Error", mensajeError, SweetAlertIcon.Error);
        }
        else
        {
            planentrenamientoForm!.FormPostedSuccessfully = true;
            navigationManager.NavigateTo("planentrenamiento");
        }
    }

    private void Return()
    {
        navigationManager.NavigateTo("planentrenamiento");
    }
}
